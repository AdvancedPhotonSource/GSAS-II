[project]
authors = [
  "Brian H. Toby <toby@anl.gov>",
  "Robert B. Von Dreele <vondreele@anl.gov>",
  ]
channels = ["conda-forge"]
description = "Structural analysis from neutron and x-ray diffraction"
name = "pixi"
platforms = ["linux-64", "win-64", "osx-arm64"]


[pypi-dependencies]


[tasks]

clean-build = { cmd = "(rm dist/*whl || true) && (rm -r build || true) ", cwd='../' }
saveversions =  { cmd = "python save-versions.py", cwd='../GSASII/install' }
build =  { cmd = "python -m build -wnx -vvvv -Cbuild-dir='build'", cwd='../', depends-on = ['clean-build']}
install = { cmd = "pip install dist/*whl --force-reinstall --no-deps" , cwd='../', depends-on=['saveversions', 'build']}

# following contains a rather kludgy way to get files into bin area
install-editable =  { cmd = "pip install -ve . --no-build-isolation; /bin/cp -v $(find ./build -name convcell) ./pixi/.pixi/envs/$PIXI_ENVIRONMENT_NAME/bin/; /bin/cp -v $(find ./build -name LATTIC) ./pixi/.pixi/envs/$PIXI_ENVIRONMENT_NAME/bin/", cwd='../', depends-on=['clean-build', 'saveversions']}
install-editable-win =  { cmd = "pip install -ve . --no-build-isolation; cp ./build/*/sources/LATTIC.exe ./pixi/.pixi/envs/*/Scripts/; cp ./build/*/sources/convcell.exe ./pixi/.pixi/envs/*/Scripts/; ls; ls -d ./pixi/.pixi/envs/*/Scripts/*.exe", cwd='../', depends-on=['clean-build', 'saveversions']}

build-and-go ={ depends-on= ["install", "ui"]}
#build-and-go-win ={ depends-on= ["install-win", "ui"]}

test = {cmd = "python -m pytest ../" }

ui = 'GSASII_NOPATHHACKING="true" python -m GSASII'

[dependencies]
h5py = ">=3.12.1,<4"
imageio = ">=2.36.1,<3"
matplotlib-base = ">=3.10.0,<4"
meson-python = ">=0.17.1,<0.18"
ninja = ">=1.12.1,<2"
numpy = ">=2.2.1,<3"
pillow = ">=11.1.0,<12"
pkg-config = ">=0.29.2,<0.30"
pyopengl = ">=3.1.6,<4"
pyproject-metadata = ">=0.9.0,<0.10"
requests = ">=2.32.3,<3"
scipy = ">=1.15.0,<2"
tomli = ">=2.2.1,<3"
wheel = ">=0.45.1,<0.46"
wxpython = ">=4.2.2,<5"
pip = ">=24.3.1,<25"
python-build = ">=1.2.2.post1,<2"
zarr = ">=2.18.3,<4"
xmltodict = ">=0.14.2,<0.15"
pycifrw = ">=4.4.0"
pytest = ">=8.3.4,<9"
gitpython = ">=3.1.44,<4"
ipython = ">=8.32.0,<9"
cython = ">=3.0.11,<4"
seekpath = ">=2.1.0,<3"
pybaselines = ">=1.2.0,<2"

[target.win-64.dependencies]
gfortran = ">=14.2.0,<14.3"
gcc = ">=14.2.0,<14.3"

[target.osx-arm64.dependencies]
compilers = ">=1.9.0,<2"
clang = ">=18.1.8,<19"

# for now assume gcc & gfortran already installed in Linux

# The list above contains a number of items that are needed only for
# installation/development, not runtime:
#     cython, meson-python, gitpython, gfortran, gcc, compilers, clang
# This is also likely true for these, but I am less sure:
#      tomli, wheel, python-build, ninja, pkg-config, pyproject-metadata
# Also, users probably do not need pytest or ipython, but these might be included only when
#  install-editable is used.
# dependencies removed to switch to gcc/gfortran:
#    compilers = ">=1.8.0,<2"
#    clang = ">=17.0.6,<20"
# also, the following has windows commands that build with lang, which
# does not [yet?] work for GSAS-II binaries
#build-win =  { cmd = "python -m build -wnx -vvvv -Cbuild-dir='build'", cwd='../', depends-on = ['clean-build'] , env={CC = 'clang-cl', CXX ='clang-cl'}}
#install-win = { cmd = "pip install dist/*whl --force-reinstall --no-deps" , cwd='../', depends-on=['saveversions', 'build-win']}
#install-editable-win =  { cmd = "pip install -ve . --no-build-isolation" , cwd='../', depends-on=['clean-build', 'saveversions'] , env={CC = 'clang-cl', CXX ='clang-cl'}}
#
# TODO? separate runtime & build/install dependencies

[feature.py311.dependencies]
python = "<3.12,>=3.11"

[feature.py312.dependencies]
python = "<3.13,>=3.12"

[feature.py313.dependencies]
python = "<3.14,>=3.13"

[feature.py310.dependencies]
python = "<3.11,>=3.10"

[environments]
py310 = ['py310']
py311 = ['py311']
py312 = ['py312']
py313 = ['py313']

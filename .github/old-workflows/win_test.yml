name: debug self-tests on Windows w/3.11

on:
  workflow_dispatch:    # Allows running this workflow manually
  # Runs on pushes targeting the default branch
#  push:
#    branches-ignore:
#      - master
  #   branches: ['main']
#  pull_request:
#    branches: ['main']


jobs:
  test-GSAS-II:
    strategy:
      fail-fast: false
      matrix:
#        python-version: ["3.11", "3.12", "3.13"]
        python-version: ["3.11"]
#        python-version: ["3.12"]
    runs-on: 'windows-latest'
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda install
        shell: bash -el {0}
        run: |
          # tailor the numpy version to match the GSAS-II binaries 
          if [ "${{ matrix.python-version }}" == "3.13" ]; then
            npver="2.2 python-gil"
          elif [ "${{ matrix.python-version }}" == "3.12" ]; then
            npver=2.2
          elif [ "${{ matrix.python-version }}" == "3.11" ]; then
            npver=1.26
          fi
          #conda list
          #conda info
          conda install python=${{ matrix.python-version }} numpy=${npver} scipy requests pytest git gitpython pycifrw -c conda-forge --override-channels --quiet
          #conda install --quiet numpy=${npver} requests pytest briantoby::gsas2pkg -c conda-forge
          conda info
          conda list
      - name: GSAS-II install
        shell: bash -el {0}
        run: |
          #mkdir G2
          #cd G2
          curl -L -O https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/raw/main/install/gitstrap.py
          python gitstrap.py --nocheck --noshortcut --branch=main

      - name: find files
        shell: bash -el {0}
        run: |
          ls -l GSAS-II/GSASII-bin/win_64_p3.11_n1.26
          #ls -l GSAS-II/GSASII-bin/win_64_p3.12_n2.2
          ls -l GSAS-II/tests

      - name: GSAS-II single test
        if: always()
        shell: bash -el {0}
        run: |
          cd GSAS-II
          python tests/test_elm.py
          python tests/test_spg.py

      # - name: GSAS-II all tests
      #   if: always()
      #   shell: bash -el {0}
      #   run: |
      #     cd GSAS-II
      #     ls
      #     python -m pytest

      - name: try pyspg
        if: always()
        shell: bash -el {0}
        run: |
          cd GSAS-II/GSASII-bin/win_64_p3.11_n1.26
          #cd GSAS-II/GSASII-bin/win_64_p3.12_n2.2
          python -VV
          python -c "import sys; print(sys.path)"
          python -c "import pyspg"

      - name: try ldd
        if: always()
        shell: bash -el {0}
        run: |
          #conda create -n ntldd python=3.12 numpy=2.2 m2w64-ntldd-git
          conda create -n ntldd python=3.11 numpy=1.26 m2w64-ntldd-git
          conda activate ntldd
          cd GSAS-II/GSASII-bin/win_64_p3.11_n1.26
          #cd GSAS-II/GSASII-bin/win_64_p3.12_n2.2
          ls
          ntldd *.pyd
          python -c "import sys; sys.path.insert(0,'.'); import pyspg"
